apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'cpp'
apply plugin: 'windows-resources'
apply plugin: "visual-studio"

// C++ specific build configurations

// Acquiring environment variables
def opencvhome = System.getenv("OPENCV_HOME")

// Include directories
def opencvinclude = opencvhome + "\\include"

// Lib directories
def opencvlibs = opencvhome + "\\lib"

/*
model {
    repositories {
        libs(PrebuiltLibraries) {
            opencv {
                headers.srcDir opencvinclude

                binaries.withType(StaticLibraryBinary) {
                    def libName = targetPlatform.operatingSystem.windows ? 'opencv_core300.lib' : 'libopencv_core300.a'
                    staticLibraryFile = file(opencvlibs + "\\" + libName)
                }

                binaries.withType(SharedLibraryBinary) {
                    def libDynName = targetPlatform.operatingSystem.windows ? 'opencv_core300.dll' : 'libopencv_core00.so'
                    def libStaticName = targetPlatform.operatingSystem.windows ? 'opencv_core300.lib' : 'libopencv_core300.a'
                    // Windows uses a .dll file, with a different link file if it exists (not Cygwin or MinGW)
                    sharedLibraryFile = file(opencvlibs + "\\" + libDynName)
                    if (file(opencvlibs + "\\" + libStaticName).exists()) {
                        sharedLibraryLinkFile = file(opencvlibs + "\\" + libStaticName)
                    }
                }
            }
        }
    }

    components {
        main(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs "src/main/cpp"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include"
                    }
                }

                cpp.lib library:'opencv', linkage:'static'
            }
        }
    }

    visualStudio {
        projects.all {
            projectFile.location = "vs/${name}.vcxproj"
            filtersFile.location = "vs/${name}.vcxproj.filters"
        }
        solutions.all {
            solutionFile.location = "vs/${name}.sln"
        }
    }

    buildTypes {
        debug
        release
    }

    platforms {
        x64 {
            architecture "x86_64"
        }
    }
}

// For any shared library binaries built with Visual C++,
// define the DLL_EXPORT macro
binaries.withType(NativeLibrarySpec) {
    if (toolChain in VisualCpp) {
        cCompiler.include "/I" + includes
        cCompiler.args "/Zi"
        cCompiler.define "DLL_EXPORT"
    }
    if (toolChain in Gcc && buildType == buildTypes.debug) {
        cCompiler.include "-I" + includes
        cppCompiler.args "-g "
    }
    if (toolChain in VisualCpp && buildType == buildTypes.debug) {

        cppCompiler.args '/Zi'
        cppCompiler.define 'DEBUG'
        linker.args '/DEBUG'
    }
}
*/

// Java specific build configurations

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Modulo7',
                   'Implementation-Version': 1.0
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // compile files('./resources/externalDeps/jEN.jar')
	compile group: 'org.apache.lucene', name: 'lucene-analyzers', version: '3.4.0'
	compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
	compile group: 'org.json', name: 'json', version: '20140107'
	compile group: 'pdfbox', name: 'pdfbox', version: '0.7.3'
    compile group: 'com.googlecode.jen-api', name: 'jen-api', version: '4.x.p'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'org.apache.jclouds', name: 'jclouds-compute', version: '1.9.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.10.4'
    compile group: 'com.googlecode.jen-api', name: 'jen-api', version: '4.x.p'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.10.Final'
    compile group: 'org.bytedeco', name: 'javacv', version: '1.0'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.apache.avro', name: 'avro', version: '1.7.7'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}